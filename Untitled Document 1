		filename1 = directory+"/"+fnbase1+"_rg_"   +fnbase2+".xyz" # (phi,psi) to radius of gyration
		filename2 = directory+"/"+fnbase1+"_re_"   +fnbase2+".xyz" # (phi,psi) to end-to-end distance
		filename3 = directory+"/"+fnbase1+"_theta_"+fnbase2+".xyz" # (phi,psi) to Miyawaya's theta (Mannige, PeerJ, 2017)
		filename4 = directory+"/"+fnbase1+"_d_"    +fnbase2+".xyz" # (phi,psi) to Miyawaya's d (Mannige, PeerJ, 2017)
		filename5 = directory+"/"+fnbase1+"_r_"    +fnbase2+".xyz" # (phi,psi) to Ramachandran number (Mannige Kundu Whitelam, PLOS ONE, 2016)

		# READING THE XYZ FILES
		#cmap = plt.get_cmap("Blues")
		#cmap = sns.cubehelix_palette(8, start=.5, rot=-.75, as_cmap=True)
		
		#cmap = sns.color_palette("Blues")
		fileanme_and_title = [[filename1,'rg'],
		                      [filename2,'re'],
		                      [filename3,'theta']
		                      [filename4,'d'],
		                      [filename5,'R']]
		
		
		dictionary = {}
		for filename,ztype in fileanme_and_title:
			dictionary['phi'] = []
			dictionary['psi'] = []
			dictionary[ztype] = []
			
			print "------------------\nREADING:",fnbase+".xyz"
			f = open(fnbase+".xyz","r")
			for l in f.read().split("\n"):
				if len(l):
					l = l.split("\t")
					x = float(l[0])
					y = float(l[1])
					z = float(l[2])
					dictionary['phi'].append(x)
					dictionary['psi'].append(y)
					dictionary[ztype].append(z)
			f.close()
			
			
			if 0: # draw histogram
				plt.clf()
				locallib.draw_histogram(Z,bins=40)
				plt.clf()
			
			
			if omega == 0:
				title+= " ($cis$)"
			else:
				title+= " ($trans$)"
			
			anglerange = [(-180,180,5)]
			
			for amin,amax,astep in anglerange:
				append_abs = ""
				if '|' in title:
					append_abs += "_abs"
					
				
				output_fnbase = os.path.dirname(fnbase)+"/"+os.path.basename(fnbase).split("_")[0]+"_"+os.path.basename(fnbase).split("_")[1]+append_abs
				
				newX = []
				newY = []
				newZ = []
				
				if amin == -180 and amax == 180:
					pass
				else:
					output_fnbase += "_range"+str(amin)+"-"+str(amax)
				output_fnbase += "_step"+str(astep)
					
				
				for phi in np.arange(amin,amax+astep/2,astep):
					if -180.0 <= phi and phi <= 180.0:
						phi_bound = phi
					else:
						phi_bound = -180.+(phi+180.) % 360.
					#
					for psi in np.arange(amin,amax+astep/2,astep):
						if -180.0 <= psi and psi <= 180.0:
							psi_bound = psi
						else:
							psi_bound = -180.+(psi+180.) % 360.
						#
						chi = phi_psi_to_chi[(phi_bound,psi_bound)]
						if "|" in title:
							chi = np.abs(chi)
						newX.append(phi)
						newY.append(psi)
						newZ.append(chi)
				
				if amin == -180 and amax == 180:
					if "chirality1" in output_fnbase:
						if omega == 180.0:
							output_file.write("Fig 6a-(ii):   \t"+output_fn+"_chi.*\n")
						if omega == 0.0:
							output_file.write("Fig 6b-(ii):   \t"+output_fn+"_chi.*\n")
					if "chirality2" in output_fnbase:
						if omega == 180.0:
							output_file.write("Fig 6a-(iii):  \t"+output_fn+"_chi.*\n")
						if omega == 0.0:
							output_file.write("Fig 6b-(iii):  \t"+output_fn+"_chi.*\n")
				
				xticks = range(int(amin),int(amax)+1,180)
				yticks = range(int(amin),int(amax)+1,180)
				
				plt.clf()
				for x in xticks:
					if x != amin and x != amax:
						ls = 'solid'
						if x % 360 == 0.0:
							ls = 'dashed' #or 'dotted'
						plt.plot([x, x], [amin, amax], c='k', ls=ls, lw=1)
				for y in yticks:
					if y != amin and y != amax:
						ls = 'solid'
						if y % 360 == 0.0:
							ls = 'dashed' #or 'dotted'
						plt.plot([amin, amax], [y, y], c='k', ls=ls, lw=1)
				
				fns = [output_fnbase+".eps",output_fnbase+".png"] #output_fnbase+".png",
				print "WRITING TO:",",".join(fns)
				
				locallib.make2Dfigure(newX,newY,newZ,fn=fns,
						xscaling=1, cmap=cmap,title=title,
						xtitle="$\phi$",ytitle="$\psi$",
						xticks=xticks, yticks=yticks,
						xlim=[amin,amax],ylim=[amin,amax],show=0,start_fresh=1, colorbar=1)#,zlim=[-1,1])

